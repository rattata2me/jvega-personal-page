<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>Jorge Vega</title><link>http://jvega.xyz/</link><description>jorge vega arias personal page</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Mon, 03 Apr 2023 16:29:41 +0800</lastBuildDate><atom:link href="http://jvega.xyz/index.xml" rel="self" type="application/rss+xml"/><item><title>Stable Diffusion custom workflow for rendering video</title><link>http://jvega.xyz/posts/stablediffusionvideo/</link><pubDate>Mon, 03 Apr 2023 16:29:41 +0800</pubDate><author>Jorge Vega</author><guid>http://jvega.xyz/posts/stablediffusionvideo/</guid><description>Developed a simple python script that leverages stable diffusion models to enhance video quality by post rendering a stylized frame. I discovered that by using Stable diffusion models and simple shadering I can improve rendering and post styling. This might be something that is getting interesting lately. By using gradio and stable diffusion 1.5 I rendered some stylized images.
Afterwards, i thought about integrating frame interpolation into the workflow and to add custom color correction to prevent flickering.</description></item><item><title>Minimal Neuron</title><link>http://jvega.xyz/posts/neuralnetwork/</link><pubDate>Sat, 03 Apr 2021 16:29:41 +0800</pubDate><author>Jorge Vega</author><guid>http://jvega.xyz/posts/neuralnetwork/</guid><description>I made a simple implementation in C of the classical sigmoid neural network. As its made from scratch in C code it can easily be ported to many appliances. For now code correctly feedforwards when a correct neural data sheet is given. Tested on various neural networks model based on the MINST dataset
Code can be downloaded HERE</description></item><item><title>Custom 3D graphics library</title><link>http://jvega.xyz/posts/custom3dgraphics/</link><pubDate>Fri, 03 May 2019 16:29:41 +0800</pubDate><author>Jorge Vega</author><guid>http://jvega.xyz/posts/custom3dgraphics/</guid><description>Custom graphics library made in Java, educational purposes mostly. The library is capable of handling perspective and isometric projection. As it runs on cpu its perfect for light computing science needs. Will keep updating it with geometry algorithms such as convex hull grapping and a light physics engine.
Code is avalaible HERE</description></item><item><title>Automata Shaders</title><link>http://jvega.xyz/posts/automata/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>Jorge Vega</author><guid>http://jvega.xyz/posts/automata/</guid><description>A project I made few years ago while testing and learning GLSL shading language and the graphics pipeline. Given simple rules automata follow complex patters. In this example I assigned a weight function for each automata which computed the best location in the next move based on distance to other automata and &amp;ldquo;fuel&amp;rdquo; locations. Mixed with a vornoi style noise rules, this creates emerging biological patterns similar to fungi structures.</description></item><item><title>InameVR</title><link>http://jvega.xyz/posts/inamevr/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>Jorge Vega</author><guid>http://jvega.xyz/posts/inamevr/</guid><description>Currently under the search of a stable version.
InameVR is an unespecific library that makes programming a homebrew driver for a customized &amp;ldquo;DIY&amp;rdquo; device easier. InameVR uses as the main graphical UI and C++ for the server backend.
Code can be downloaded HERE
It is designed to work with different drivers including Steam VR</description></item></channel></rss>